#!/usr/bin/env python

PACKAGE='camera_aravis'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

onoff_enum          = gen.enum([gen.const("Off",                    str_t, "Off",        "Off"),
                                gen.const("On",                     str_t, "On",         "On") ],
                                "On or Off")
auto_enum           = gen.enum([gen.const("Off_",                   str_t, "Off",        "Use Manual Settings"),
                                gen.const("Once",                   str_t, "Once",       "Recalc Once"),
                                gen.const("Continuous",             str_t, "Continuous", "Recalc Continually") ],
                                "Automatic Settings")
acquisitionmode_enum = gen.enum([gen.const("Continuous_",           str_t, "Continuous",  "Capture continuously upon trigger."),
                                gen.const("SingleFrame",            str_t, "SingleFrame", "Capture one frame upon trigger."),
                                gen.const("MultiFrame",             str_t, "MultiFrame",  "Capture multiple frames upon trigger.")],
                                "AcquisitionMode")
auto_alg_enum          = gen.enum([gen.const("Mean",                    str_t, "Mean",        "Mean"),
                                gen.const("FitRange",                     str_t, "FitRange",         "FitRange") ],
                                "Mean or FitRange")

gen.add("AcquisitionMode",         str_t,    0, "Acquisition Mode",     "Continuous", edit_method=acquisitionmode_enum)
gen.add("AcquisitionFrameRate", double_t, 0, "Framerate (fps)",    20.0, 5.0, 40.0)

gen.add("ExposureTime",            double_t, 0, "Exposure time (us)",   2000.0, 50.0, 2e6)
gen.add("ExposureAuto",            str_t,    0, "Automatic exposure",   "Continuous", edit_method=auto_enum)
gen.add("BrightnessAutoExposureTimeLimitMode",         str_t,    0, "Enable exposure limits for auto exposure", "On", edit_method=onoff_enum)
gen.add("BrightnessAutoExposureTimeMin",         double_t,    0, "Minimum limit of ExposureTime when ExposureAuto is enabled (us)",   50, 50, 10000)
gen.add("BrightnessAutoExposureTimeMax",         double_t,    0, "Maximum limit of ExposureTime when ExposureAuto is enabled (us)",   35000, 10000, 2000000)
gen.add("BrightnessAutoTarget", int_t, 0, "The general lightness or darkness of the auto exposure and gain features; specifically the target mean histogram level of the image (%)",   50, 0, 100)
gen.add("BrightnessAutoTargetTolerance", int_t,    0, "Tolerance in variation from BrightnessAutoTarget (%)",   5, 0, 50)

gen.add("Gain",                double_t, 0, "The gain setting applied to the sensor (dB)",   0.0, -30.0, 30.0)
gen.add("GainAuto",            str_t,    0, "Automatic gain",   "Continuous", edit_method=auto_enum)
gen.add("BrightnessAutoGainLimitMode",   str_t,    0, "Enable gain limits for auto gain", "On", edit_method=onoff_enum)
gen.add("BrightnessAutoGainMin",         double_t,    0, "Minimum limit of Gain when GainAuto is enabled (dB)",   -30, -30, 30)
gen.add("BrightnessAutoGainMax",         double_t,    0, "Maximum limit of Gain when GainAuto is enabled (dB)",   30, -30, 30)

gen.add("Gamma",            double_t, 0, "Gamma (dB)",   1.0, 1.0, 3.0)

exit(gen.generate(PACKAGE, "camera_aravis", "CameraAravisIDS"))
